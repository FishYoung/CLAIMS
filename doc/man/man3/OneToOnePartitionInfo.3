.TH "OneToOnePartitionInfo" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
OneToOnePartitionInfo \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Partitioner\&.h>\fP
.PP
Inherits \fBPartitionInfo\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBOneToOnePartitionInfo\fP ()"
.br
.ti -1c
.RI "\fBOneToOnePartitionInfo\fP (\fBPartitionID\fP pid)"
.br
.ti -1c
.RI "\fBOneToOnePartitionInfo\fP (\fBPartitionID\fP pid, string file_name)"
.br
.ti -1c
.RI "\fBOneToOnePartitionInfo\fP (\fBPartitionID\fP pid, string file_name, unsigned \fBnumber_of_blocks\fP, unsigned number_of_tuples)"
.br
.ti -1c
.RI "\fBbinding_mode\fP \fBget_mode\fP () const "
.br
.ti -1c
.RI "void \fBadd_one_block\fP ()"
.br
.ti -1c
.RI "void \fBadd_mutiple_block\fP (unsigned number_of_new_blocks)"
.br
.ti -1c
.RI "bool \fBbind_one_block\fP (\fBBlockID\fP blockid, \fBNodeID\fP target)"
.br
.ti -1c
.RI "bool \fBbind_all_blocks\fP (\fBNodeID\fP target)"
.br
.ti -1c
.RI "bool \fBis_all_blocks_bound\fP ()"
.br
.ti -1c
.RI "void \fBunbind_all_blocks\fP ()"
.br
.ti -1c
.RI "bool \fBis_colocated\fP (const \fBPartitionInfo\fP &) const "
.br
.ti -1c
.RI "\fBNodeID\fP \fBget_location\fP () const "
.br
.ti -1c
.RI "virtual \fB~OneToOnePartitionInfo\fP ()"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "template<class Archive > void \fBserialize\fP (Archive &ar, const unsigned int version)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBNodeID\fP \fBbinding_node_id_\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBboost::serialization::access\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Constructor & Destructor Documentation"
.PP 
.SS "OneToOnePartitionInfo::OneToOnePartitionInfo ()\fC [inline]\fP"

.SS "OneToOnePartitionInfo::OneToOnePartitionInfo (\fBPartitionID\fPpid)\fC [inline]\fP"

.SS "OneToOnePartitionInfo::OneToOnePartitionInfo (\fBPartitionID\fPpid, stringfile_name)\fC [inline]\fP"

.SS "OneToOnePartitionInfo::OneToOnePartitionInfo (\fBPartitionID\fPpid, stringfile_name, unsignednumber_of_blocks, unsignednumber_of_tuples)\fC [inline]\fP"

.SS "virtual OneToOnePartitionInfo::~OneToOnePartitionInfo ()\fC [inline]\fP, \fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void OneToOnePartitionInfo::add_mutiple_block (unsignednumber_of_new_blocks)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBPartitionInfo\fP\&.
.SS "void OneToOnePartitionInfo::add_one_block ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBPartitionInfo\fP\&.
.SS "bool OneToOnePartitionInfo::bind_all_blocks (\fBNodeID\fPtarget)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBPartitionInfo\fP\&.
.SS "bool OneToOnePartitionInfo::bind_one_block (\fBBlockID\fPblockid, \fBNodeID\fPtarget)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBPartitionInfo\fP\&.
.SS "\fBNodeID\fP OneToOnePartitionInfo::get_location () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBPartitionInfo\fP\&.
.SS "\fBbinding_mode\fP OneToOnePartitionInfo::get_mode () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBPartitionInfo\fP\&.
.PP
References OneToOne\&.
.SS "bool OneToOnePartitionInfo::is_all_blocks_bound ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBPartitionInfo\fP\&.
.SS "bool OneToOnePartitionInfo::is_colocated (const \fBPartitionInfo\fP &target) const\fC [virtual]\fP"

.PP
Implements \fBPartitionInfo\fP\&.
.PP
References binding_node_id_, PartitionInfo::get_mode(), and OneToMany\&.
.SS "template<class Archive > void OneToOnePartitionInfo::serialize (Archive &ar, const unsigned intversion)\fC [inline]\fP, \fC [private]\fP"

.SS "void OneToOnePartitionInfo::unbind_all_blocks ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBPartitionInfo\fP\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "friend class boost::serialization::access\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBNodeID\fP OneToOnePartitionInfo::binding_node_id_\fC [private]\fP"

.PP
Referenced by is_colocated()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

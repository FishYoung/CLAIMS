.TH "Json::Path" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Json::Path \- 
.PP
Experimental and untested: represents a 'path' to access a node\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <json\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPath\fP (const std::string &path, const \fBPathArgument\fP &a1=\fBPathArgument\fP(), const \fBPathArgument\fP &a2=\fBPathArgument\fP(), const \fBPathArgument\fP &a3=\fBPathArgument\fP(), const \fBPathArgument\fP &a4=\fBPathArgument\fP(), const \fBPathArgument\fP &a5=\fBPathArgument\fP())"
.br
.ti -1c
.RI "const \fBValue\fP & \fBresolve\fP (const \fBValue\fP &root) const "
.br
.ti -1c
.RI "\fBValue\fP \fBresolve\fP (const \fBValue\fP &root, const \fBValue\fP &defaultValue) const "
.br
.ti -1c
.RI "\fBValue\fP & \fBmake\fP (\fBValue\fP &root) const "
.br
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "typedef std::vector< const 
.br
\fBPathArgument\fP * > \fBInArgs\fP"
.br
.ti -1c
.RI "typedef std::vector< \fBPathArgument\fP > \fBArgs\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBmakePath\fP (const std::string &path, const \fBInArgs\fP &\fBin\fP)"
.br
.ti -1c
.RI "void \fBaddPathInArg\fP (const std::string &path, const \fBInArgs\fP &\fBin\fP, InArgs::const_iterator &itInArg, \fBPathArgument::Kind\fP kind)"
.br
.ti -1c
.RI "void \fBinvalidPath\fP (const std::string &path, int location)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBArgs\fP \fBargs_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Experimental and untested: represents a 'path' to access a node\&. 

Syntax:
.IP "\(bu" 2
'\&.' => root node
.IP "\(bu" 2
'\&.[n]' => elements at index 'n' of root node (an array value)
.IP "\(bu" 2
'\&.name' => member named 'name' of root node (an object value)
.IP "\(bu" 2
'\&.name1\&.name2\&.name3'
.IP "\(bu" 2
'\&.[0][1][2]\&.name1[3]'
.IP "\(bu" 2
'\&.%' => member name is provided as parameter
.IP "\(bu" 2
'\&.[%]' => index is provied as parameter 
.PP

.SH "Member Typedef Documentation"
.PP 
.SS "typedef std::vector<\fBPathArgument\fP> \fBJson::Path::Args\fP\fC [private]\fP"

.SS "typedef std::vector<const \fBPathArgument\fP*> \fBJson::Path::InArgs\fP\fC [private]\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "Json::Path::Path (const std::string &path, const \fBPathArgument\fP &a1 = \fC\fBPathArgument\fP()\fP, const \fBPathArgument\fP &a2 = \fC\fBPathArgument\fP()\fP, const \fBPathArgument\fP &a3 = \fC\fBPathArgument\fP()\fP, const \fBPathArgument\fP &a4 = \fC\fBPathArgument\fP()\fP, const \fBPathArgument\fP &a5 = \fC\fBPathArgument\fP()\fP)"

.PP
References Json::in(), and makePath()\&.
.SH "Member Function Documentation"
.PP 
.SS "void Json::Path::addPathInArg (const std::string &path, const \fBInArgs\fP &in, InArgs::const_iterator &itInArg, \fBPathArgument::Kind\fPkind)\fC [private]\fP"

.PP
References args_\&.
.PP
Referenced by makePath()\&.
.SS "void Json::Path::invalidPath (const std::string &path, intlocation)\fC [private]\fP"

.PP
Referenced by makePath()\&.
.SS "\fBValue\fP & Json::Path::make (\fBValue\fP &root) const"
Creates the 'path' to access the specified node and returns a reference on the node\&. 
.PP
References args_, Json::PathArgument::index_, Json::Value::isArray(), Json::Value::isObject(), Json::PathArgument::key_, Json::PathArgument::kind_, Json::PathArgument::kindIndex, and Json::PathArgument::kindKey\&.
.SS "void Json::Path::makePath (const std::string &path, const \fBInArgs\fP &in)\fC [private]\fP"

.PP
References addPathInArg(), args_, invalidPath(), Json::PathArgument::kindIndex, and Json::PathArgument::kindKey\&.
.PP
Referenced by Path()\&.
.SS "const \fBValue\fP & Json::Path::resolve (const \fBValue\fP &root) const"

.PP
References args_, Json::PathArgument::index_, Json::Value::isArray(), Json::Value::isObject(), Json::Value::isValidIndex(), Json::PathArgument::key_, Json::PathArgument::kind_, Json::PathArgument::kindIndex, Json::PathArgument::kindKey, and Json::Value::null\&.
.SS "\fBValue\fP Json::Path::resolve (const \fBValue\fP &root, const \fBValue\fP &defaultValue) const"

.PP
References args_, Json::PathArgument::index_, Json::Value::isArray(), Json::Value::isObject(), Json::Value::isValidIndex(), Json::PathArgument::key_, Json::PathArgument::kind_, Json::PathArgument::kindIndex, Json::PathArgument::kindKey, and Json::Value::null\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBArgs\fP Json::Path::args_\fC [private]\fP"

.PP
Referenced by addPathInArg(), make(), makePath(), and resolve()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

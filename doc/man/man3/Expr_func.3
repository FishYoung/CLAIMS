.TH "Expr_func" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Expr_func \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <sql_node_struct\&.h>\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBnodetype\fP \fBtype\fP"
.br
.ti -1c
.RI "char * \fBstr\fP"
.br
.ti -1c
.RI "char * \fBfunname\fP"
.br
.ti -1c
.RI "\fBNode\fP * \fBargs\fP"
.br
.ti -1c
.RI "\fBNode\fP * \fBparameter1\fP"
.br
.ti -1c
.RI "\fBNode\fP * \fBparameter2\fP"
.br
.ti -1c
.RI "\fBNode\fP * \fBnext\fP"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "\fBNode\fP* Expr_func::args"

.PP
Referenced by dfs_select_args(), expr_to_str(), ExprCanCancelProject1(), get_aggregation_args(), getwctable(), groupby_analysis(), having_analysis(), judge_expr_equalto_expr(), newExprFunc(), oncondition_check(), orderby_analysis(), output(), recurse_get_item_in_expr(), selectlist_expr_analysis(), solve_const_value_in_wherecondition(), transformqual(), and wherecondition_check()\&.
.SS "char* Expr_func::funname"

.PP
Referenced by dfs_select_args(), expr_to_str(), ExprCanCancelProject1(), ExprCanCancelProject2(), get_aggregation_args(), groupby_analysis(), having_analysis(), judge_expr_equalto_expr(), newExprFunc(), output(), recurse_get_item_in_expr(), selectlist_expr_analysis(), solve_const_value_in_wherecondition(), transformqual(), and wherecondition_check()\&.
.SS "\fBNode\fP* Expr_func::next"

.PP
Referenced by judge_expr_equalto_expr(), newExprFunc(), selectlist_expr_analysis(), and transformqual()\&.
.SS "\fBNode\fP* Expr_func::parameter1"

.PP
Referenced by dfs_select_args(), expr_to_str(), ExprCanCancelProject1(), get_aggregation_args(), getwctable(), groupby_analysis(), having_analysis(), judge_expr_equalto_expr(), newExprFunc(), orderby_analysis(), output(), recurse_get_item_in_expr(), selectlist_expr_analysis(), solve_const_value_in_wherecondition(), transformqual(), and wherecondition_check()\&.
.SS "\fBNode\fP * Expr_func::parameter2"

.PP
Referenced by expr_to_str(), getwctable(), groupby_analysis(), having_analysis(), judge_expr_equalto_expr(), newExprFunc(), output(), selectlist_expr_analysis(), transformqual(), and wherecondition_check()\&.
.SS "char* Expr_func::str"

.PP
Referenced by expr_to_str(), get_expr_str(), get_orderby_column_from_selectlist(), judge_expr_equalto_expr(), newExprFunc(), output(), and transformqual()\&.
.SS "\fBnodetype\fP Expr_func::type"

.PP
Referenced by newExprFunc()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

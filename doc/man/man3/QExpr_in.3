.TH "QExpr_in" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QExpr_in \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <qnode\&.h>\fP
.PP
Inherits \fBQNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQExpr_in\fP (vector< \fBQNode\fP * > &cmpnode_, vector< vector< \fBQNode\fP * > > &rnode_, char *alias_)"
.br
.ti -1c
.RI "\fBQExpr_in\fP (\fBQExpr_in\fP *node)"
.br
.ti -1c
.RI "\fBQExpr_in\fP ()"
.br
.ti -1c
.RI "virtual \fB~QExpr_in\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "vector< \fBQNode\fP * > \fBcmpnode\fP"
.br
.ti -1c
.RI "vector< vector< \fBQNode\fP * > > \fBrnode\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "template<class Archive > void \fBserialize\fP (Archive &ar, const unsigned int version)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBboost::serialization::access\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QExpr_in::QExpr_in (vector< \fBQNode\fP * > &cmpnode_, vector< vector< \fBQNode\fP * > > &rnode_, char *alias_)"

.PP
References QNode::actual_type, QNode::alias, cmpnode, NULL, rnode, t_boolean, t_qexpr_in, QNode::type, and QNode::value\&.
.SS "QExpr_in::QExpr_in (\fBQExpr_in\fP *node)"

.PP
References QNode::actual_type, QNode::alias, QNode::isnull, QNode::length, QNode::return_type, and QNode::type\&.
.SS "QExpr_in::QExpr_in ()\fC [inline]\fP"

.SS "virtual QExpr_in::~QExpr_in ()\fC [inline]\fP, \fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<class Archive > void QExpr_in::serialize (Archive &ar, const unsigned intversion)\fC [inline]\fP, \fC [private]\fP"

.SH "Friends And Related Function Documentation"
.PP 
.SS "friend class boost::serialization::access\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "vector<\fBQNode\fP *> QExpr_in::cmpnode"

.PP
Referenced by Exec_in(), Expr_copy(), InitExprAtLogicalPlan(), InitExprAtPhysicalPlan(), and QExpr_in()\&.
.SS "vector< vector<\fBQNode\fP *> > QExpr_in::rnode"

.PP
Referenced by Exec_in(), Expr_copy(), InitExprAtLogicalPlan(), InitExprAtPhysicalPlan(), and QExpr_in()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

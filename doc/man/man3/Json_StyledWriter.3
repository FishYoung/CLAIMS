.TH "Json::StyledWriter" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Json::StyledWriter \- 
.PP
Writes a \fBValue\fP in \fCJSON\fP format in a human friendly way\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <json\&.h>\fP
.PP
Inherits \fBJson::Writer\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBStyledWriter\fP ()"
.br
.ti -1c
.RI "virtual \fB~StyledWriter\fP ()"
.br
.ti -1c
.RI "virtual std::string \fBwrite\fP (const \fBValue\fP &root)"
.br
.RI "\fISerialize a \fBValue\fP in \fCJSON\fP format\&. \fP"
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "typedef std::vector< std::string > \fBChildValues\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBwriteValue\fP (const \fBValue\fP &value)"
.br
.ti -1c
.RI "void \fBwriteArrayValue\fP (const \fBValue\fP &value)"
.br
.ti -1c
.RI "bool \fBisMultineArray\fP (const \fBValue\fP &value)"
.br
.ti -1c
.RI "void \fBpushValue\fP (const std::string &value)"
.br
.ti -1c
.RI "void \fBwriteIndent\fP ()"
.br
.ti -1c
.RI "void \fBwriteWithIndent\fP (const std::string &value)"
.br
.ti -1c
.RI "void \fBindent\fP ()"
.br
.ti -1c
.RI "void \fBunindent\fP ()"
.br
.ti -1c
.RI "void \fBwriteCommentBeforeValue\fP (const \fBValue\fP &root)"
.br
.ti -1c
.RI "void \fBwriteCommentAfterValueOnSameLine\fP (const \fBValue\fP &root)"
.br
.ti -1c
.RI "bool \fBhasCommentForValue\fP (const \fBValue\fP &value)"
.br
.in -1c
.SS "Static Private Member Functions"

.in +1c
.ti -1c
.RI "static std::string \fBnormalizeEOL\fP (const std::string &text)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBChildValues\fP \fBchildValues_\fP"
.br
.ti -1c
.RI "std::string \fBdocument_\fP"
.br
.ti -1c
.RI "std::string \fBindentString_\fP"
.br
.ti -1c
.RI "int \fBrightMargin_\fP"
.br
.ti -1c
.RI "int \fBindentSize_\fP"
.br
.ti -1c
.RI "bool \fBaddChildValues_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Writes a \fBValue\fP in \fCJSON\fP format in a human friendly way\&. 

The rules for line break and indent are as follow:
.IP "\(bu" 2
Object value:
.IP "  \(bu" 4
if empty then print {} without indent and line break
.IP "  \(bu" 4
if not empty the print '{', line break & indent, print one value per line and then unindent and line break and print '}'\&.
.PP

.IP "\(bu" 2
Array value:
.IP "  \(bu" 4
if empty then print [] without indent and line break
.IP "  \(bu" 4
if the array contains no object value, empty array or some other value types, and all the values fit on one lines, then print the array on a single line\&.
.IP "  \(bu" 4
otherwise, it the values do not fit on one line, or the array contains object or non empty array, then print one value per line\&.
.PP

.PP
.PP
If the \fBValue\fP have comments then they are outputed according to their \fBCommentPlacement\fP\&.
.PP
\fBSee Also:\fP
.RS 4
\fBReader\fP, \fBValue\fP, \fBValue::setComment()\fP 
.RE
.PP

.SH "Member Typedef Documentation"
.PP 
.SS "typedef std::vector<std::string> \fBJson::StyledWriter::ChildValues\fP\fC [private]\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "Json::StyledWriter::StyledWriter ()"

.SS "virtual Json::StyledWriter::~StyledWriter ()\fC [inline]\fP, \fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "bool Json::StyledWriter::hasCommentForValue (const \fBValue\fP &value)\fC [private]\fP"

.PP
References Json::commentAfter, Json::commentAfterOnSameLine, Json::commentBefore, and Json::Value::hasComment()\&.
.SS "void Json::StyledWriter::indent ()\fC [private]\fP"

.PP
References indentSize_, and indentString_\&.
.PP
Referenced by writeArrayValue(), and writeValue()\&.
.SS "bool Json::StyledWriter::isMultineArray (const \fBValue\fP &value)\fC [private]\fP"

.PP
References addChildValues_, childValues_, Json::Value::isArray(), Json::Value::isObject(), rightMargin_, Json::Value::size(), and writeValue()\&.
.PP
Referenced by writeArrayValue()\&.
.SS "std::string Json::StyledWriter::normalizeEOL (const std::string &text)\fC [static]\fP, \fC [private]\fP"

.PP
Referenced by writeCommentAfterValueOnSameLine(), and writeCommentBeforeValue()\&.
.SS "void Json::StyledWriter::pushValue (const std::string &value)\fC [private]\fP"

.PP
References addChildValues_, childValues_, and document_\&.
.PP
Referenced by writeArrayValue(), and writeValue()\&.
.SS "void Json::StyledWriter::unindent ()\fC [private]\fP"

.PP
References indentSize_, and indentString_\&.
.PP
Referenced by writeArrayValue(), and writeValue()\&.
.SS "std::string Json::StyledWriter::write (const \fBValue\fP &root)\fC [virtual]\fP"

.PP
Serialize a \fBValue\fP in \fCJSON\fP format\&. 
.PP
\fBParameters:\fP
.RS 4
\fIroot\fP \fBValue\fP to serialize\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
String containing the JSON document that represents the root value\&. 
.RE
.PP

.PP
Implements \fBJson::Writer\fP\&.
.PP
References addChildValues_, document_, indentString_, writeCommentAfterValueOnSameLine(), writeCommentBeforeValue(), and writeValue()\&.
.PP
Referenced by Json::Value::toStyledString()\&.
.SS "void Json::StyledWriter::writeArrayValue (const \fBValue\fP &value)\fC [private]\fP"

.PP
References childValues_, document_, indent(), isMultineArray(), pushValue(), Json::Value::size(), unindent(), writeCommentAfterValueOnSameLine(), writeCommentBeforeValue(), writeIndent(), writeValue(), and writeWithIndent()\&.
.PP
Referenced by writeValue()\&.
.SS "void Json::StyledWriter::writeCommentAfterValueOnSameLine (const \fBValue\fP &root)\fC [private]\fP"

.PP
References Json::commentAfter, Json::commentAfterOnSameLine, document_, Json::Value::getComment(), Json::Value::hasComment(), and normalizeEOL()\&.
.PP
Referenced by write(), writeArrayValue(), and writeValue()\&.
.SS "void Json::StyledWriter::writeCommentBeforeValue (const \fBValue\fP &root)\fC [private]\fP"

.PP
References Json::commentBefore, document_, Json::Value::getComment(), Json::Value::hasComment(), normalizeEOL(), and writeIndent()\&.
.PP
Referenced by write(), writeArrayValue(), and writeValue()\&.
.SS "void Json::StyledWriter::writeIndent ()\fC [private]\fP"

.PP
References document_, and indentString_\&.
.PP
Referenced by writeArrayValue(), writeCommentBeforeValue(), and writeWithIndent()\&.
.SS "void Json::StyledWriter::writeValue (const \fBValue\fP &value)\fC [private]\fP"

.PP
References Json::arrayValue, Json::Value::asBool(), Json::Value::asCString(), Json::Value::asDouble(), Json::Value::asLargestInt(), Json::Value::asLargestUInt(), Json::booleanValue, document_, Json::Value::getMemberNames(), indent(), Json::intValue, Json::nullValue, Json::objectValue, pushValue(), Json::realValue, Json::stringValue, Json::Value::type(), Json::uintValue, unindent(), Json::valueToQuotedString(), Json::valueToString(), writeArrayValue(), writeCommentAfterValueOnSameLine(), writeCommentBeforeValue(), and writeWithIndent()\&.
.PP
Referenced by isMultineArray(), write(), and writeArrayValue()\&.
.SS "void Json::StyledWriter::writeWithIndent (const std::string &value)\fC [private]\fP"

.PP
References document_, and writeIndent()\&.
.PP
Referenced by writeArrayValue(), and writeValue()\&.
.SH "Member Data Documentation"
.PP 
.SS "bool Json::StyledWriter::addChildValues_\fC [private]\fP"

.PP
Referenced by isMultineArray(), pushValue(), and write()\&.
.SS "\fBChildValues\fP Json::StyledWriter::childValues_\fC [private]\fP"

.PP
Referenced by isMultineArray(), pushValue(), and writeArrayValue()\&.
.SS "std::string Json::StyledWriter::document_\fC [private]\fP"

.PP
Referenced by pushValue(), write(), writeArrayValue(), writeCommentAfterValueOnSameLine(), writeCommentBeforeValue(), writeIndent(), writeValue(), and writeWithIndent()\&.
.SS "int Json::StyledWriter::indentSize_\fC [private]\fP"

.PP
Referenced by indent(), and unindent()\&.
.SS "std::string Json::StyledWriter::indentString_\fC [private]\fP"

.PP
Referenced by indent(), unindent(), write(), and writeIndent()\&.
.SS "int Json::StyledWriter::rightMargin_\fC [private]\fP"

.PP
Referenced by isMultineArray()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

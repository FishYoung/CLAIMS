.TH "NodeTracker" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NodeTracker \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <NodeTracker\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~NodeTracker\fP ()"
.br
.ti -1c
.RI "int \fBRegisterNode\fP (\fBNodeAddress\fP)"
.br
.ti -1c
.RI "std::string \fBGetNodeIP\fP (const \fBNodeID\fP &) const "
.br
.ti -1c
.RI "std::vector< \fBNodeID\fP > \fBGetNodeIDList\fP () const "
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBNodeTracker\fP * \fBGetInstance\fP ()"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBNodeTracker\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "boost::unordered_map
.br
< \fBNodeAddress\fP, \fBNodeID\fP > \fBaddress_to_id_\fP"
.br
.ti -1c
.RI "unsigned \fBallocate_cur_\fP"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static \fBNodeTracker\fP * \fBinstance_\fP =0"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "NodeTracker::~NodeTracker ()\fC [virtual]\fP"

.PP
Referenced by ResourceManagerMaster::~ResourceManagerMaster()\&.
.SS "NodeTracker::NodeTracker ()\fC [private]\fP"

.PP
Referenced by GetInstance()\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBNodeTracker\fP * NodeTracker::GetInstance ()\fC [static]\fP"

.PP
References instance_, and NodeTracker()\&.
.PP
Referenced by claims::logical_operator::LogicalOperator::ConvertNodeIDListToNodeIPList(), claims::logical_operator::LogicalEqualJoin::DecideOutputDataflowProperty(), claims::logical_operator::LogicalScan::GetOptimalPhysicalPlan(), claims::logical_operator::LogicalFilter::GetOptimalPhysicalPlan(), claims::logical_operator::LogicalQueryPlanRoot::GetOptimalPhysicalPlan(), claims::logical_operator::LogicalQueryPlanRoot::GetPhysicalPlan(), claims::logical_operator::LogicalEqualJoin::GetPhysicalPlan(), ResourceManagerMaster::ResourceManagerMaster(), BlockManagerMaster::SendBindingMessage(), and BlockManagerMaster::SendUnbindingMessage()\&.
.SS "std::vector< \fBNodeID\fP > NodeTracker::GetNodeIDList () const"

.PP
References address_to_id_\&.
.PP
Referenced by claims::logical_operator::LogicalEqualJoin::DecideOutputDataflowProperty(), claims::logical_operator::LogicalScan::GetOptimalPhysicalPlan(), claims::logical_operator::LogicalFilter::GetOptimalPhysicalPlan(), and claims::logical_operator::LogicalQueryPlanRoot::GetOptimalPhysicalPlan()\&.
.SS "std::string NodeTracker::GetNodeIP (const \fBNodeID\fP &target) const"

.PP
References address_to_id_, and NULL\&.
.PP
Referenced by claims::logical_operator::LogicalOperator::ConvertNodeIDListToNodeIPList()\&.
.SS "int NodeTracker::RegisterNode (\fBNodeAddress\fPnew_node_address)"

.PP
References address_to_id_, and allocate_cur_\&.
.PP
Referenced by ResourceManagerMaster::RegisterNewSlave()\&.
.SH "Member Data Documentation"
.PP 
.SS "boost::unordered_map<\fBNodeAddress\fP,\fBNodeID\fP> NodeTracker::address_to_id_\fC [private]\fP"

.PP
Referenced by GetNodeIDList(), GetNodeIP(), and RegisterNode()\&.
.SS "unsigned NodeTracker::allocate_cur_\fC [private]\fP"

.PP
Referenced by RegisterNode()\&.
.SS "\fBNodeTracker\fP * NodeTracker::instance_ =0\fC [static]\fP, \fC [private]\fP"

.PP
Referenced by GetInstance()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

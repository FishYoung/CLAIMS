.TH "Operate" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Operate \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <data_type\&.h>\fP
.PP
Inherited by \fBOperateBool\fP, \fBOperateDate\fP, \fBOperateDatetime\fP, \fBOperateDecimal\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, \fBOperateInt\fP, \fBOperateSmallInt\fP, \fBOperateString\fP, \fBOperateTime\fP, \fBOperateULong\fP, and \fBOperateUSmallInt\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBOperate\fP (bool _nullable=true)"
.br
.ti -1c
.RI "virtual \fB~Operate\fP ()"
.br
.ti -1c
.RI "void \fBass\fP (void *src, void *desc)"
.br
.ti -1c
.RI "virtual void \fBassignment\fP (const void *const &src, void *const &desc) const =0"
.br
.ti -1c
.RI "virtual unsigned \fBgetPartitionValue\fP (const void *key, const \fBPartitionFunction\fP *partition_function) const =0"
.br
.ti -1c
.RI "virtual unsigned \fBgetPartitionValue\fP (const void *key, const unsigned long &mod) const =0"
.br
.ti -1c
.RI "virtual unsigned \fBgetPartitionValue\fP (const void *key) const =0"
.br
.ti -1c
.RI "virtual std::string \fBtoString\fP (void *value)=0"
.br
.ti -1c
.RI "virtual void \fBtoValue\fP (void *target, const char *string)=0"
.br
.ti -1c
.RI "virtual bool \fBequal\fP (const void *const &a, const void *const &b) const =0"
.br
.ti -1c
.RI "virtual bool \fBless\fP (const void *&a, const void *&b) const =0"
.br
.ti -1c
.RI "virtual bool \fBgreate\fP (const void *&a, const void *&b) const =0"
.br
.ti -1c
.RI "virtual void \fBadd\fP (void *target, void *increment)=0"
.br
.ti -1c
.RI "virtual void \fBmultiple\fP (void *target, void *increment)=0"
.br
.ti -1c
.RI "virtual int \fBcompare\fP (const void *a, const void *b) const =0"
.br
.ti -1c
.RI "virtual \fBfun\fP \fBGetADDFunction\fP ()=0"
.br
.ti -1c
.RI "virtual \fBfun\fP \fBGetMINFunction\fP ()=0"
.br
.ti -1c
.RI "virtual \fBfun\fP \fBGetMAXFunction\fP ()=0"
.br
.ti -1c
.RI "virtual \fBfun\fP \fBGetIncreateByOneFunction\fP ()=0"
.br
.ti -1c
.RI "virtual \fBfun\fP \fBGetAVGFunction\fP ()=0"
.br
.ti -1c
.RI "virtual \fBOperate\fP * \fBduplicateOperator\fP () const =0"
.br
.ti -1c
.RI "virtual bool \fBsetNull\fP (void *value)=0"
.br
.ti -1c
.RI "virtual bool \fBisNull\fP (void *value) const =0"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "void(* \fBassign\fP )(const void *const &src, void *const &desc)"
.br
.ti -1c
.RI "bool \fBnullable\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Operate::Operate (bool_nullable = \fCtrue\fP)\fC [inline]\fP"

.SS "virtual Operate::~Operate ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Referenced by test_date_computation()\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual void Operate::add (void *target, void *increment)\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by test_date_computation(), test_decimal_add(), test_decimal_add1(), and test_decimal_minus()\&.
.SS "void Operate::ass (void *src, void *desc)\fC [inline]\fP"

.SS "virtual void Operate::assignment (const void *const &src, void *const &desc) const\fC [inline]\fP, \fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by AttributeComparator::AttributeComparator(), SubTuple::getSubTuple(), bottomLayerCollecting::Next(), claims::physical_operator::PhysicalAggregation::Open(), claims::physical_operator::InOperator::Open(), ratio(), and TupleConvertor::sub_tuple()\&.
.SS "virtual int Operate::compare (const void *a, const void *b) const\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by Estimation::estEqualOper(), Estimation::estRangeOper(), and ratio()\&.
.SS "virtual \fBOperate\fP* Operate::duplicateOperator () const\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by column_type::column_type(), claims::physical_operator::PhysicalHashJoin::Open(), bottomLayerSorting::Open(), and column_type::operator=()\&.
.SS "virtual bool Operate::equal (const void *const &a, const void *const &b) const\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by Estimation::estEqualOper(), Estimation::estRangeOper(), claims::physical_operator::PhysicalHashJoin::IsMatch(), claims::physical_operator::InOperator::Next(), and claims::physical_operator::PhysicalAggregation::Open()\&.
.SS "virtual \fBfun\fP Operate::GetADDFunction ()\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.SS "virtual \fBfun\fP Operate::GetAVGFunction ()\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.SS "virtual \fBfun\fP Operate::GetIncreateByOneFunction ()\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.SS "virtual \fBfun\fP Operate::GetMAXFunction ()\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by ratio()\&.
.SS "virtual \fBfun\fP Operate::GetMINFunction ()\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by ratio()\&.
.SS "virtual unsigned Operate::getPartitionValue (const void *key, const \fBPartitionFunction\fP *partition_function) const\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by claims::physical_operator::ExchangeSender::GetHashPartitionId(), claims::physical_operator::InOperator::Next(), claims::physical_operator::PhysicalHashJoin::Next(), claims::physical_operator::PhysicalAggregation::Open(), claims::physical_operator::InOperator::Open(), and claims::physical_operator::PhysicalHashJoin::Open()\&.
.SS "virtual unsigned Operate::getPartitionValue (const void *key, const unsigned long &mod) const\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.SS "virtual unsigned Operate::getPartitionValue (const void *key) const\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.SS "virtual bool Operate::greate (const void *&a, const void *&b) const\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.SS "virtual bool Operate::isNull (void *value) const\fC [inline]\fP, \fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.SS "virtual bool Operate::less (const void *&a, const void *&b) const\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by bottomLayerSorting::compare()\&.
.SS "virtual void Operate::multiple (void *target, void *increment)\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by test_decimal_add2()\&.
.SS "virtual bool Operate::setNull (void *value)\fC [inline]\fP, \fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by set_null_test()\&.
.SS "virtual std::string Operate::toString (void *value)\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by null_value_test(), ResultSet::print(), Histogram::Print(), set_null_test(), test_date_computation(), test_decimal_add(), test_decimal_add1(), test_decimal_add2(), test_decimal_minus(), test_decimal_to_string(), test_decimal_to_value1(), test_decimal_to_value2(), test_decimal_to_value3(), test_decimal_to_value4(), and test_decimal_to_value5()\&.
.SS "virtual void Operate::toValue (void *target, const char *string)\fC [pure virtual]\fP"

.PP
Implemented in \fBOperateBool\fP, \fBOperateDecimal\fP, \fBOperateUSmallInt\fP, \fBOperateSmallInt\fP, \fBOperateDatetime\fP, \fBOperateTime\fP, \fBOperateDate\fP, \fBOperateString\fP, \fBOperateULong\fP, \fBOperateDouble\fP, \fBOperateFloat\fP, and \fBOperateInt\fP\&.
.PP
Referenced by null_value_test(), test_date_computation(), and test_decimal_minus()\&.
.SH "Member Data Documentation"
.PP 
.SS "void(* Operate::assign)(const void *const &src, void *const &desc)"

.PP
Referenced by Analyzer::equiDepthAnalyse(), and Analyzer::mcvAnalyse()\&.
.SS "bool Operate::nullable"


.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

.TH "Schema" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Schema \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Schema\&.h>\fP
.PP
Inherited by \fBSchemaFix\fP, and \fBSchemaVar\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBschema_type\fP { \fBfixed\fP, \fBvaraible\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSchema\fP (const std::vector< \fBcolumn_type\fP > &\fBcolumns\fP)"
.br
.ti -1c
.RI "\fBSchema\fP (const \fBSchema\fP &r)"
.br
.ti -1c
.RI "\fBSchema\fP ()"
.br
.ti -1c
.RI "virtual \fB~Schema\fP ()"
.br
.ti -1c
.RI "virtual unsigned \fBgetTupleMaxSize\fP () const =0"
.br
.ti -1c
.RI "virtual unsigned \fBgetTupleActualSize\fP (void *tuple) const =0"
.br
.ti -1c
.RI "virtual void \fBgetColumnValue\fP (unsigned index, void *src, void *desc)=0"
.br
.ti -1c
.RI "virtual int \fBgetColumnOffset\fP (unsigned index) const =0"
.br
.ti -1c
.RI "virtual void * \fBgetColumnAddess\fP (const unsigned &index, const void *const &column_start) const \fB__attribute__\fP((always_inline))=0"
.br
.ti -1c
.RI "virtual unsigned \fBcopyTuple\fP (void *src, void *desc) const =0"
.br
.ti -1c
.RI "unsigned \fBgetncolumns\fP () const "
.br
.ti -1c
.RI "virtual \fBSchema\fP * \fBgetSubSchema\fP (std::vector< unsigned >) const =0"
.br
.ti -1c
.RI "virtual \fBSchema\fP * \fBduplicateSchema\fP () const =0"
.br
.ti -1c
.RI "const \fBcolumn_type\fP & \fBgetcolumn\fP (const unsigned index) const "
.br
.ti -1c
.RI "virtual \fBschema_type\fP \fBgetSchemaType\fP () const =0"
.br
.ti -1c
.RI "virtual void \fBaddColumn\fP (\fBcolumn_type\fP ct, unsigned size)"
.br
.ti -1c
.RI "virtual void \fBdisplayTuple\fP (const void *tuple_start_address, const char *spliter='|') const "
.br
.ti -1c
.RI "virtual void \fBtoValue\fP (std::string text_tuple, void *binary_tuple, const char attr_separator)"
.br
.ti -1c
.RI "virtual void \fBshowAccum_off\fP ()"
.br
.ti -1c
.RI "bool \fBhasSameSchema\fP (\fBSchema\fP *schema)"
.br
.ti -1c
.RI "virtual std::string \fBgetColumnValue\fP (const void *tuple_start_address, int i)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::vector< \fBcolumn_type\fP > \fBcolumns\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "template<class Archive > void \fBserialize\fP (Archive &ar, const unsigned int version)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBboost::serialization::access\fP"
.br
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBSchema::schema_type\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIfixed \fP\fP
.TP
\fB\fIvaraible \fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Schema::Schema (const std::vector< \fBcolumn_type\fP > &columns)"

.SS "Schema::Schema (const \fBSchema\fP &r)"

.PP
References columns\&.
.SS "Schema::Schema ()\fC [inline]\fP"

.SS "Schema::~Schema ()\fC [virtual]\fP"

.PP
Referenced by fill_basic_hash_table(), projection_scan(), and TEST()\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual void Schema::addColumn (\fBcolumn_type\fPct, unsignedsize)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBSchemaFix\fP\&.
.SS "virtual unsigned Schema::copyTuple (void *src, void *desc) const\fC [inline]\fP, \fC [pure virtual]\fP"

.PP
Implemented in \fBSchemaFix\fP, and \fBSchemaVar\fP\&.
.PP
Referenced by insert_into_hash_table(), insert_into_hash_table_from_projection(), claims::physical_operator::PhysicalLimit::Next(), claims::physical_operator::ExchangeSenderMaterialized::Next(), claims::physical_operator::PhysicalNestLoopJoin::Next(), claims::physical_operator::InOperator::Next(), claims::physical_operator::ExchangeSenderPipeline::Next(), IndexScanIterator::Next(), claims::physical_operator::PhysicalHashJoin::Next(), claims::physical_operator::PhysicalHashJoin::Open(), and bottomLayerSorting::Open()\&.
.SS "void Schema::displayTuple (const void *tuple_start_address, const char *spliter = \fC'|'\fP) const\fC [virtual]\fP"

.PP
References columns, and getColumnAddess()\&.
.PP
Referenced by claims::physical_operator::ResultPrinter::Next(), and sub_tuple_test()\&.
.SS "virtual \fBSchema\fP* Schema::duplicateSchema () const\fC [pure virtual]\fP"

.PP
Implemented in \fBSchemaFix\fP, and \fBSchemaVar\fP\&.
.PP
Referenced by claims::physical_operator::ResultCollector::CollectResult(), generateBlockStreamBuffer(), claims::physical_operator::PhysicalHashJoin::Open(), ResultSet::ResultSet(), and claims::physical_operator::ExchangeMerger::SerializeAndSendPlan()\&.
.SS "const \fBcolumn_type\fP& Schema::getcolumn (const unsignedindex) const\fC [inline]\fP"

.PP
References columns\&.
.PP
Referenced by bottomLayerCollecting::computeOutputSchema(), bottomLayerSorting::computeVectorSchema(), createEqualJoinExpression(), claims::physical_operator::ExchangeSender::GetHashPartitionId(), LogicalCSBIndexBuilding::GetPhysicalPlan(), SubTuple::getSubTuple(), hasSameSchema(), InitExprAtLogicalPlan(), claims::common::ExprColumn::InitExprAtLogicalPlan(), claims::physical_operator::PhysicalHashJoin::IsMatch(), bottomLayerCollecting::Next(), claims::physical_operator::InOperator::Next(), claims::physical_operator::PhysicalHashJoin::Next(), bottomLayerSorting::Next(), claims::physical_operator::PhysicalAggregation::Open(), claims::physical_operator::InOperator::Open(), claims::physical_operator::PhysicalHashJoin::Open(), bottomLayerSorting::Open(), ResultSet::print(), claims::physical_operator::PhysicalProject::ProcessInLogic(), TupleConvertor::sub_tuple(), and test_decimal_minus()\&.
.SS "virtual void* Schema::getColumnAddess (const unsigned &index, const void *const &column_start) const\fC [inline]\fP, \fC [pure virtual]\fP"

.PP
Implemented in \fBSchemaFix\fP, and \fBSchemaVar\fP\&.
.PP
Referenced by bottomLayerSorting::compare(), displayTuple(), claims::common::ExprColumn::ExprEvaluate(), generateBlockStreamBuffer(), getcol(), getColumnValue(), claims::physical_operator::ExchangeSender::GetHashPartitionId(), SubTuple::getSubTuple(), bottomLayerSorting::indexBuilding(), claims::physical_operator::PhysicalHashJoin::IsMatch(), bottomLayerCollecting::Next(), claims::physical_operator::CombineTuple::Next(), claims::physical_operator::PhysicalAggregation::Next(), claims::physical_operator::InOperator::Next(), claims::physical_operator::PhysicalHashJoin::Next(), claims::physical_operator::InOperator::Open(), claims::physical_operator::PhysicalAggregation::Open(), claims::physical_operator::PhysicalHashJoin::Open(), ResultSet::print(), claims::physical_operator::PhysicalFilter::ProcessInLogic(), TupleConvertor::sub_tuple(), and TEST_F()\&.
.SS "virtual int Schema::getColumnOffset (unsignedindex) const\fC [pure virtual]\fP"

.PP
Implemented in \fBSchemaFix\fP, and \fBSchemaVar\fP\&.
.PP
Referenced by codegen_column()\&.
.SS "virtual void Schema::getColumnValue (unsignedindex, void *src, void *desc)\fC [pure virtual]\fP"

.PP
Implemented in \fBSchemaFix\fP, and \fBSchemaVar\fP\&.
.PP
Referenced by bottomLayerSorting::Open(), and ClientListener::sendJsonPacket()\&.
.SS "std::string Schema::getColumnValue (const void *tuple_start_address, inti)\fC [virtual]\fP"

.PP
References columns, and getColumnAddess()\&.
.SS "unsigned Schema::getncolumns () const"

.PP
References columns\&.
.PP
Referenced by BlockStreamVar::BlockStreamVar(), hasSameSchema(), ResultSet::print(), and ClientListener::sendJsonPacket()\&.
.SS "virtual \fBschema_type\fP Schema::getSchemaType () const\fC [pure virtual]\fP"

.PP
Implemented in \fBSchemaFix\fP, and \fBSchemaVar\fP\&.
.PP
Referenced by BlockStreamBase::createBlock(), BlockStreamBase::createBlockWithDesirableSerilaizedSize(), and hasSameSchema()\&.
.SS "virtual \fBSchema\fP* Schema::getSubSchema (std::vector< unsigned >) const\fC [pure virtual]\fP"

.PP
Implemented in \fBSchemaFix\fP, and \fBSchemaVar\fP\&.
.PP
Referenced by claims::physical_operator::InOperator::Open(), and sub_tuple_test()\&.
.SS "virtual unsigned Schema::getTupleActualSize (void *tuple) const\fC [inline]\fP, \fC [pure virtual]\fP"

.PP
Implemented in \fBSchemaVar\fP, and \fBSchemaFix\fP\&.
.PP
Referenced by claims::physical_operator::PhysicalLimit::Next(), claims::physical_operator::ExchangeSenderMaterialized::Next(), claims::physical_operator::ExchangeSenderPipeline::Next(), and claims::physical_operator::PhysicalFilter::ProcessInLogic()\&.
.SS "virtual unsigned Schema::getTupleMaxSize () const\fC [pure virtual]\fP"

.PP
Implemented in \fBSchemaVar\fP, and \fBSchemaFix\fP\&.
.PP
Referenced by claims::physical_operator::PerformanceMonitor::Close(), BlockStreamBase::createBlock(), BlockStreamBase::createBlockWithDesirableSerilaizedSize(), fill_basic_hash_table(), generate_BlockStreamBuffer(), generateBlockStreamBuffer(), get_one(), getFilterProcessFunc(), initial_input_date(), insert_into_hash_table_from_projection(), HdfsLoader::insertRecords(), bottomLayerCollecting::Next(), claims::physical_operator::CombineTuple::Next(), claims::physical_operator::PhysicalNestLoopJoin::Next(), claims::physical_operator::PhysicalAggregation::Next(), claims::physical_operator::InOperator::Next(), claims::physical_operator::PhysicalSort::Next(), IndexScanIterator::Next(), claims::physical_operator::PhysicalHashJoin::Next(), claims::physical_operator::PhysicalProject::Next(), claims::physical_operator::PhysicalAggregation::Open(), claims::physical_operator::PhysicalHashJoin::Open(), bottomLayerSorting::Open(), claims::physical_operator::PhysicalProject::ProcessInLogic(), claims::physical_operator::PerformanceMonitor::ReportPerformance(), sub_tuple_test(), TEST(), and TEST_F()\&.
.SS "bool Schema::hasSameSchema (\fBSchema\fP *schema)"

.PP
References columns, getcolumn(), getncolumns(), and getSchemaType()\&.
.PP
Referenced by TEST()\&.
.SS "template<class Archive > void Schema::serialize (Archive &ar, const unsigned intversion)\fC [inline]\fP, \fC [private]\fP"

.PP
References columns\&.
.SS "virtual void Schema::showAccum_off ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBSchemaFix\fP\&.
.SS "virtual void Schema::toValue (std::stringtext_tuple, void *binary_tuple, const charattr_separator)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBSchemaFix\fP\&.
.PP
Referenced by HdfsLoader::insertRecords()\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "friend class boost::serialization::access\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "std::vector<\fBcolumn_type\fP> Schema::columns"

.PP
Referenced by SchemaFix::addColumn(), BlockStreamVar::BlockStreamVar(), displayTuple(), SchemaVar::duplicateSchema(), SchemaFix::duplicateSchema(), generate_BlockStreamBuffer(), getcolumn(), SchemaFix::getColumnValue(), getColumnValue(), getncolumns(), SchemaFix::getSubSchema(), SchemaVar::getTupleActualSize(), hasSameSchema(), initial_input_date(), insert_into_hash_table(), insert_into_hash_table_from_projection(), claims::physical_operator::CombineTuple::Next(), claims::physical_operator::PhysicalAggregation::Next(), Schema(), serialize(), and SchemaFix::toValue()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

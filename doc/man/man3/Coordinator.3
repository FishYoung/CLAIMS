.TH "Coordinator" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Coordinator \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Coordinator\&.h>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBCoordinateActor\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCoordinator\fP ()"
.br
.ti -1c
.RI "virtual \fB~Coordinator\fP ()"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "bool \fBPrepareTheSocket\fP ()"
.br
.ti -1c
.RI "bool \fBSetupTheTheron\fP ()"
.br
.ti -1c
.RI "bool \fBCreateListeningThread\fP ()"
.br
.ti -1c
.RI "bool \fBSendReadyNotificationToNewNode\fP (int socket_new_node)"
.br
.ti -1c
.RI "bool \fBSendCoordinatorEndPointPort\fP (int socket_new_node)"
.br
.in -1c
.SS "Static Private Member Functions"

.in +1c
.ti -1c
.RI "static void * \fBListeningNewNode\fP (void *arg)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "int \fBsocket_fd\fP"
.br
.ti -1c
.RI "Theron::EndPoint * \fBendpoint\fP"
.br
.ti -1c
.RI "Theron::Framework * \fBframework\fP"
.br
.ti -1c
.RI "std::string \fBEndPointPort\fP"
.br
.ti -1c
.RI "std::vector< std::pair
.br
< std::string, std::string > > \fBPeersIpPort\fP"
.br
.ti -1c
.RI "\fBLogging\fP * \fBlogging\fP"
.br
.ti -1c
.RI "pthread_t \fBprochaseId\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Coordinator::Coordinator ()"
swap the order of SetupTheTheron and PreparetheSocket to provide more time to Theron::EndPoint initialization before other EndPoints connect to it\&.
.PP
References CreateListeningThread(), Logging::elog(), logging, PrepareTheSocket(), and SetupTheTheron()\&.
.SS "Coordinator::~Coordinator ()\fC [virtual]\fP"

.PP
References endpoint, FileClose(), framework, prochaseId, and socket_fd\&.
.PP
Referenced by main234112234()\&.
.SH "Member Function Documentation"
.PP 
.SS "bool Coordinator::CreateListeningThread ()\fC [private]\fP"

.PP
References ListeningNewNode(), Logging::log(), logging, NULL, and prochaseId\&.
.PP
Referenced by Coordinator()\&.
.SS "void * Coordinator::ListeningNewNode (void *arg)\fC [static]\fP, \fC [private]\fP"
TODO: In the current version, the \fBCoordinator\fP will repeatedly send message to each NodeConnectionActor until the feedback is received which means the target node has conducted new connection based on message received\&. However, if the target node is dead, the message will be sent repeatedly and infinitely\&. Additional code is needed to handle the dead node\&.
.PP
References Logging::elog(), endpoint, FileClose(), framework, NodeConnectionMessage::ip, Logging::log(), logging, PeersIpPort, NodeConnectionMessage::port, SendCoordinatorEndPointPort(), SendReadyNotificationToNewNode(), NodeConnectionMessage::serialize(), socket_fd, TimeOutReceiver::TimeOutWait(), and TimeOutReceiver::~TimeOutReceiver()\&.
.PP
Referenced by CreateListeningThread()\&.
.SS "bool Coordinator::PrepareTheSocket ()\fC [private]\fP"

.PP
References Config::config_file, Logging::elog(), Logging::log(), logging, and socket_fd\&.
.PP
Referenced by Coordinator()\&.
.SS "bool Coordinator::SendCoordinatorEndPointPort (intsocket_new_node)\fC [private]\fP"

.PP
References Logging::elog(), EndPointPort, Logging::log(), and logging\&.
.PP
Referenced by ListeningNewNode()\&.
.SS "bool Coordinator::SendReadyNotificationToNewNode (intsocket_new_node)\fC [private]\fP"

.PP
References Logging::log(), and logging\&.
.PP
Referenced by ListeningNewNode()\&.
.SS "bool Coordinator::SetupTheTheron ()\fC [private]\fP"

.PP
References PortManager::applyPort(), endpoint, EndPointPort, framework, PortManager::getInstance(), Environment::getInstance(), Environment::getIp(), Logging::log(), and logging\&.
.PP
Referenced by Coordinator()\&.
.SH "Member Data Documentation"
.PP 
.SS "Theron::EndPoint* Coordinator::endpoint\fC [private]\fP"

.PP
Referenced by ListeningNewNode(), SetupTheTheron(), and ~Coordinator()\&.
.SS "std::string Coordinator::EndPointPort\fC [private]\fP"

.PP
Referenced by SendCoordinatorEndPointPort(), and SetupTheTheron()\&.
.SS "Theron::Framework* Coordinator::framework\fC [private]\fP"

.PP
Referenced by ListeningNewNode(), SetupTheTheron(), and ~Coordinator()\&.
.SS "\fBLogging\fP* Coordinator::logging\fC [private]\fP"

.PP
Referenced by Coordinator(), CreateListeningThread(), ListeningNewNode(), PrepareTheSocket(), SendCoordinatorEndPointPort(), SendReadyNotificationToNewNode(), and SetupTheTheron()\&.
.SS "std::vector<std::pair<std::string,std::string> > Coordinator::PeersIpPort\fC [private]\fP"

.PP
Referenced by ListeningNewNode()\&.
.SS "pthread_t Coordinator::prochaseId\fC [private]\fP"

.PP
Referenced by CreateListeningThread(), and ~Coordinator()\&.
.SS "int Coordinator::socket_fd\fC [private]\fP"

.PP
Referenced by ListeningNewNode(), PrepareTheSocket(), and ~Coordinator()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

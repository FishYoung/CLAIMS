.TH "QExpr_case_when" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QExpr_case_when \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <qnode\&.h>\fP
.PP
Inherits \fBQNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQExpr_case_when\fP (vector< \fBQNode\fP * > &qual_, vector< \fBQNode\fP * > &ans_, string alias_)"
.br
.ti -1c
.RI "\fBQExpr_case_when\fP (\fBQExpr_case_when\fP *node)"
.br
.ti -1c
.RI "\fBQExpr_case_when\fP ()"
.br
.ti -1c
.RI "virtual \fB~QExpr_case_when\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "vector< \fBQNode\fP * > \fBqual\fP"
.br
.ti -1c
.RI "vector< \fBQNode\fP * > \fBans\fP"
.br
.ti -1c
.RI "\fBQNode\fP * \fBresult\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "template<class Archive > void \fBserialize\fP (Archive &ar, const unsigned int version)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBboost::serialization::access\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QExpr_case_when::QExpr_case_when (vector< \fBQNode\fP * > &qual_, vector< \fBQNode\fP * > &ans_, stringalias_)"

.PP
References QNode::actual_type, QNode::alias, ans, NULL, qual, t_qexpr_case_when, QNode::type, and QNode::value\&.
.SS "QExpr_case_when::QExpr_case_when (\fBQExpr_case_when\fP *node)"

.PP
References QNode::actual_type, QNode::alias, QNode::isnull, QNode::length, QNode::return_type, and QNode::type\&.
.SS "QExpr_case_when::QExpr_case_when ()\fC [inline]\fP"

.SS "virtual QExpr_case_when::~QExpr_case_when ()\fC [inline]\fP, \fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<class Archive > void QExpr_case_when::serialize (Archive &ar, const unsigned intversion)\fC [inline]\fP, \fC [private]\fP"

.SH "Friends And Related Function Documentation"
.PP 
.SS "friend class boost::serialization::access\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "vector<\fBQNode\fP *> QExpr_case_when::ans"

.PP
Referenced by Exec_case_when(), Expr_copy(), InitExprAtLogicalPlan(), InitExprAtPhysicalPlan(), and QExpr_case_when()\&.
.SS "vector<\fBQNode\fP *> QExpr_case_when::qual"

.PP
Referenced by Exec_case_when(), Expr_copy(), InitExprAtLogicalPlan(), InitExprAtPhysicalPlan(), and QExpr_case_when()\&.
.SS "\fBQNode\fP* QExpr_case_when::result"


.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

.TH "Estimation" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Estimation \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Estimation\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEstimation\fP ()"
.br
.ti -1c
.RI "virtual \fB~Estimation\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static unsigned long \fBestEqualOper\fP (\fBAttributeID\fP attrID, void *para)"
.br
.ti -1c
.RI "static unsigned long \fBestRangeOper\fP (\fBAttributeID\fP attrID, void *lowPara, void *upperPara)"
.br
.ti -1c
.RI "static unsigned long \fBestEqualJoin\fP (\fBAttributeID\fP attrID1, \fBAttributeID\fP attrID2)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Estimation::Estimation ()"

.SS "Estimation::~Estimation ()\fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "unsigned long Estimation::estEqualJoin (\fBAttributeID\fPattrID1, \fBAttributeID\fPattrID2)\fC [static]\fP"

.PP
References Attribute::attrType, TableDescriptor::getAttribute(), StatManager::getAttributeStatistic(), AttributeStatistics::getHistogram(), StatManager::getInstance(), Catalog::getInstance(), Catalog::getTable(), Histogram::m_bucketCnt, Histogram::m_staCount, Histogram::m_staNumbers1, Histogram::m_staValues1, AttributeID::offset, product(), AttributeID::table_id, and column_type::type\&.
.SS "unsigned long Estimation::estEqualOper (\fBAttributeID\fPattrID, void *para)\fC [static]\fP"
如果找到最小的 i 满足 para < valueList[i]，那么para必然落在i-1号bucket中。 如果始终找不到，那么para必然是最大值，落在最后一个bucket中。
.PP
最大值，属于上一个边界。因为，唯独最后一个bucket两边都是闭区间。
.PP
References Attribute::attrType, Operate::compare(), Operate::equal(), TableDescriptor::getAttribute(), StatManager::getHistogram(), StatManager::getInstance(), Catalog::getInstance(), Catalog::getTable(), Histogram::getTupleCount(), Histogram::m_bucketCnt, Histogram::m_staNumbers1, Histogram::m_staNumbers2, Histogram::m_staValues1, Histogram::m_staValues2, AttributeID::offset, column_type::operate, and AttributeID::table_id\&.
.SS "unsigned long Estimation::estRangeOper (\fBAttributeID\fPattrID, void *lowPara, void *upperPara)\fC [static]\fP"
assume both lowPara and upperPara is legal lowPara: upperPara: range is used with < and >, instead of = for <=, it decomposed into < and = 
.PP
References Attribute::attrType, Operate::compare(), Operate::equal(), TableDescriptor::getAttribute(), StatManager::getHistogram(), StatManager::getInstance(), Catalog::getInstance(), Catalog::getTable(), Histogram::m_bucketCnt, Histogram::m_staCount, Histogram::m_staNumbers1, Histogram::m_staValues1, AttributeID::offset, column_type::operate, ratio(), and AttributeID::table_id\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

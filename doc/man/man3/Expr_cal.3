.TH "Expr_cal" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Expr_cal \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <sql_node_struct\&.h>\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBnodetype\fP \fBtype\fP"
.br
.ti -1c
.RI "char * \fBstr\fP"
.br
.ti -1c
.RI "const char * \fBsign\fP"
.br
.ti -1c
.RI "char * \fBparameter\fP"
.br
.ti -1c
.RI "int \fBcmp\fP"
.br
.ti -1c
.RI "\fBNode\fP * \fBlnext\fP"
.br
.ti -1c
.RI "\fBNode\fP * \fBrnext\fP"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "int Expr_cal::cmp"

.PP
Referenced by expr_to_str(), getjoinpairlist(), getlevel(), judge_expr_equalto_expr(), newExprCal(), output(), and transformqual()\&.
.SS "\fBNode\fP* Expr_cal::lnext"

.PP
Referenced by depart_join_condition(), departwc(), dfs_select_args(), expr_to_str(), ExprCanCancelProject1(), get_aggregation_args(), getjoinpairlist(), getwctable(), groupby_analysis(), having_analysis(), judge_expr_equalto_expr(), newExprCal(), oncondition_analysis(), oncondition_check(), orderby_analysis(), output(), recurse_get_item_in_expr(), selectlist_expr_analysis(), solve_const_value_in_wherecondition(), solve_insubquery(), transformqual(), wherecondition_analysis(), and wherecondition_check()\&.
.SS "char* Expr_cal::parameter"

.PP
Referenced by judge_expr_equalto_expr(), newExprCal(), and output()\&.
.SS "\fBNode\fP * Expr_cal::rnext"

.PP
Referenced by depart_join_condition(), departwc(), dfs_select_args(), expr_to_str(), ExprCanCancelProject1(), get_aggregation_args(), getjoinpairlist(), getwctable(), groupby_analysis(), having_analysis(), judge_expr_equalto_expr(), newExprCal(), oncondition_analysis(), oncondition_check(), orderby_analysis(), output(), recurse_get_item_in_expr(), selectlist_expr_analysis(), solve_const_value_in_wherecondition(), solve_insubquery(), transformqual(), wherecondition_analysis(), and wherecondition_check()\&.
.SS "const char* Expr_cal::sign"

.PP
Referenced by depart_join_condition(), departwc(), expr_to_str(), getjoinpairlist(), getlevel(), judge_expr_equalto_expr(), newExprCal(), oncondition_analysis(), output(), solve_insubquery(), transformqual(), and wherecondition_analysis()\&.
.SS "char* Expr_cal::str"

.PP
Referenced by expr_to_str(), get_expr_str(), get_orderby_column_from_selectlist(), judge_expr_equalto_expr(), newExprCal(), output(), and transformqual()\&.
.SS "\fBnodetype\fP Expr_cal::type"

.PP
Referenced by newExprCal()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

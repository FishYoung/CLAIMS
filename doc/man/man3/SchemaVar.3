.TH "SchemaVar" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SchemaVar \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SchemaVar\&.h>\fP
.PP
Inherits \fBSchema\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSchemaVar\fP ()"
.br
.ti -1c
.RI "virtual \fB~SchemaVar\fP ()"
.br
.ti -1c
.RI "\fBSchemaVar\fP (std::vector< \fBcolumn_type\fP > \fBcolumns\fP)"
.br
.ti -1c
.RI "virtual unsigned \fBgetTupleMaxSize\fP () const "
.br
.ti -1c
.RI "virtual unsigned \fBgetTupleActualSize\fP (void *tuple) const "
.br
.ti -1c
.RI "virtual unsigned \fBcopyTuple\fP (void *src, void *desc) const "
.br
.ti -1c
.RI "virtual \fBSchema::schema_type\fP \fBgetSchemaType\fP () const "
.br
.ti -1c
.RI "virtual void \fBgetColumnValue\fP (unsigned index, void *src, void *desc)"
.br
.ti -1c
.RI "int \fBgetColumnOffset\fP (unsigned index) const "
.br
.ti -1c
.RI "virtual \fBSchema\fP * \fBgetSubSchema\fP (std::vector< unsigned >) const "
.br
.ti -1c
.RI "\fBSchema\fP * \fBduplicateSchema\fP () const "
.br
.ti -1c
.RI "virtual void * \fBgetColumnAddess\fP (const unsigned &index, const void *const &column_start) const \fB__attribute__\fP((always_inline))"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "template<class Archive > void \fBserialize\fP (Archive &ar, const unsigned int version)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "unsigned \fBvar_attributes_\fP"
.br
.ti -1c
.RI "unsigned \fBattributes_\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBboost::serialization::access\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SchemaVar::SchemaVar ()"

.PP
Referenced by duplicateSchema()\&.
.SS "SchemaVar::~SchemaVar ()\fC [virtual]\fP"

.SS "SchemaVar::SchemaVar (std::vector< \fBcolumn_type\fP >columns)"

.PP
References attributes_, t_string, and var_attributes_\&.
.SH "Member Function Documentation"
.PP 
.SS "unsigned SchemaVar::copyTuple (void *src, void *desc) const\fC [virtual]\fP"

.PP
Implements \fBSchema\fP\&.
.PP
References getTupleActualSize()\&.
.SS "\fBSchema\fP * SchemaVar::duplicateSchema () const\fC [virtual]\fP"

.PP
Implements \fBSchema\fP\&.
.PP
References Schema::columns, and SchemaVar()\&.
.SS "virtual void* SchemaVar::getColumnAddess (const unsigned &index, const void *const &column_start) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBSchema\fP\&.
.PP
References t_string, and var_attributes_\&.
.SS "int SchemaVar::getColumnOffset (unsignedindex) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBSchema\fP\&.
.SS "virtual void SchemaVar::getColumnValue (unsignedindex, void *src, void *desc)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBSchema\fP\&.
.SS "\fBSchema::schema_type\fP SchemaVar::getSchemaType () const\fC [virtual]\fP"

.PP
Implements \fBSchema\fP\&.
.PP
References Schema::varaible\&.
.SS "virtual \fBSchema\fP* SchemaVar::getSubSchema (std::vector< unsigned >) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBSchema\fP\&.
.SS "unsigned SchemaVar::getTupleActualSize (void *tuple) const\fC [virtual]\fP"

.PP
Implements \fBSchema\fP\&.
.PP
References Schema::columns, t_string, and var_attributes_\&.
.PP
Referenced by copyTuple()\&.
.SS "virtual unsigned SchemaVar::getTupleMaxSize () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBSchema\fP\&.
.SS "template<class Archive > void SchemaVar::serialize (Archive &ar, const unsigned intversion)\fC [inline]\fP, \fC [private]\fP"

.SH "Friends And Related Function Documentation"
.PP 
.SS "friend class boost::serialization::access\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "unsigned SchemaVar::attributes_\fC [private]\fP"

.PP
Referenced by SchemaVar()\&.
.SS "unsigned SchemaVar::var_attributes_\fC [private]\fP"

.PP
Referenced by getColumnAddess(), getTupleActualSize(), and SchemaVar()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.

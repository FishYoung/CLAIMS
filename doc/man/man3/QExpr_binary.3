.TH "QExpr_binary" 3 "Thu Nov 12 2015" "Claims" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QExpr_binary \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <qnode\&.h>\fP
.PP
Inherits \fBQNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQExpr_binary\fP ()"
.br
.ti -1c
.RI "virtual \fB~QExpr_binary\fP ()"
.br
.ti -1c
.RI "\fBQExpr_binary\fP (\fBQNode\fP *l_arg, \fBQNode\fP *r_arg, \fBdata_type\fP a_type, \fBoper_type\fP op_types, \fBqnodetype\fP q_type, char *t_alias)"
.br
.ti -1c
.RI "\fBQExpr_binary\fP (\fBQExpr_binary\fP *node)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBoper_type\fP \fBop_type\fP"
.br
.ti -1c
.RI "\fBQNode\fP * \fBlnext\fP"
.br
.ti -1c
.RI "\fBQNode\fP * \fBrnext\fP"
.br
.ti -1c
.RI "\fBExecFunc\fP \fBfunction_call\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "template<class Archive > void \fBserialize\fP (Archive &ar, const unsigned int version)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBboost::serialization::access\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QExpr_binary::QExpr_binary ()\fC [inline]\fP"

.SS "virtual QExpr_binary::~QExpr_binary ()\fC [inline]\fP, \fC [virtual]\fP"

.SS "QExpr_binary::QExpr_binary (\fBQNode\fP *l_arg, \fBQNode\fP *r_arg, \fBdata_type\fPa_type, \fBoper_type\fPop_types, \fBqnodetype\fPq_type, char *t_alias)"

.PP
References QNode::actual_type, QNode::alias, lnext, NULL, rnext, QNode::type, and QNode::value\&.
.SS "QExpr_binary::QExpr_binary (\fBQExpr_binary\fP *node)"

.PP
References QNode::actual_type, QNode::alias, QNode::isnull, QNode::length, op_type, QNode::return_type, and QNode::type\&.
.SH "Member Function Documentation"
.PP 
.SS "template<class Archive > void QExpr_binary::serialize (Archive &ar, const unsigned intversion)\fC [inline]\fP, \fC [private]\fP"

.SH "Friends And Related Function Documentation"
.PP 
.SS "friend class boost::serialization::access\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBExecFunc\fP QExpr_binary::function_call"

.PP
Referenced by Exec_cal(), Exec_cmp(), Exec_in_item(), and InitExprAtPhysicalPlan()\&.
.SS "\fBQNode\fP* QExpr_binary::lnext"

.PP
Referenced by codegen(), Exec_cal(), Exec_cmp(), Exec_in_item(), Expr_copy(), InitExprAtLogicalPlan(), InitExprAtPhysicalPlan(), and QExpr_binary()\&.
.SS "\fBoper_type\fP QExpr_binary::op_type"

.PP
Referenced by codegen_binary_op(), InitExprAtPhysicalPlan(), and QExpr_binary()\&.
.SS "\fBQNode\fP * QExpr_binary::rnext"

.PP
Referenced by codegen(), Exec_cal(), Exec_cmp(), Expr_copy(), InitExprAtLogicalPlan(), InitExprAtPhysicalPlan(), and QExpr_binary()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Claims from the source code\&.
